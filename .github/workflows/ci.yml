name: NovelTea CI

on: [push, pull_request]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest, macos-latest]
    defaults:
      run:
        shell: bash

    steps:
    
    - name: Checkout
        ls -l ${{ steps.setup-ndk.outputs.ndk-path }}
      uses: actions/checkout@v2
      
    - name: Cache Qt and SFML
      id: cache
      uses: actions/cache@v2
      with:
        path: |
          ${{ github.workspace }}/Qt
          SFML/install
        key: ${{ runner.os }}-NovelTea
        
    - name: Setup MacOS Environment
      if: ${{ runner.os == 'macOS' }}
      run: |
        brew install doxygen hunspell

    - name: Setup Windows Environment
      if: ${{ runner.os == 'Windows' }}
      id: setup
      run: |
        choco install doxygen.install wget unzip
        wget https://github.com/tedvalson/NovelTea-site/releases/download/hunspell/hunspell.zip
        unzip hunspell.zip
        echo ::set-output name=include::$(pwd)/hunspell
        echo ::set-output name=library::$(pwd)/hunspell
        
    - name: Setup Linux Environment
      if: ${{ runner.os == 'Linux' }}
      run: |
        sudo apt-get update
        sudo apt-get install libxrandr-dev libudev-dev libxcursor-dev libopenal-dev libflac-dev libvorbis-dev libgl1-mesa-dev libhunspell-dev
        sudo apt-get install doxygen libgtest-dev
        
    - name: Install Qt
      uses: jurplel/install-qt-action@v2
      with:
        dir: ${{ github.workspace }}
        cached: ${{ steps.cache.outputs.cache-hit }}

    - name: Checkout SFML
      if: ${{ !steps.cache.outputs.cache-hit }}
      uses: actions/checkout@v2
      with:
        repository: tedvalson/SFML
        path: SFML
        ref: 'noveltea'

    - name: Compile SFML
      if: ${{ !steps.cache.outputs.cache-hit }}
      run: |
        cd SFML
        mkdir install
        mkdir build
        cd build
        cmake -DCMAKE_INSTALL_PREFIX=../install -DCMAKE_INSTALL_FRAMEWORK_PREFIX=../install -DSFML_BUILD_FRAMEWORKS=FALSE -DBUILD_SHARED_LIBS=TRUE ..
        cmake --build . --config Release --target install
        cd ../..
        
    - name: Compile NovelTea
      run: |
        export CMAKE_LIBRARY_PATH=${{ steps.setup.outputs.include }}
        export CMAKE_INCLUDE_PATH=${{ steps.setup.outputs.library }}
        mkdir -p install/NovelTea
        mkdir -p doc/github.io/docs
        cmake -S . -B build -DBUILD_DOCS=ON -DBUILD_TESTS=OFF -DCMAKE_INSTALL_PREFIX=./install/NovelTea -DSFML_DIR=./SFML/install/lib/cmake/SFML
        cmake -S . -B build-test -DBUILD_TESTS=ON -DENABLE_COVERAGE=On -DSFML_DIR=./SFML/install/lib/cmake/SFML
        cmake --build build --config Release --target install
        cmake --build build --config Release --target doc

    - name: Compile/Run Tests
      run: |
        cp SFML/install/lib/libsfml-* bin/test/
        VERBOSE=1 cmake --build build-test --config Release --target tests
        bin/test/tests

    - name: Codecov
      if: ${{ runner.os == 'Linux' }}
      uses: codecov/codecov-action@v3
      with:
        gcov: true
        verbose: true

    - name: Upload Artifact
      uses: actions/upload-artifact@v2
      with:
        name: test-artifact-${{ runner.os }}
        path: |
          bin/
          res/assets/
          
    - name: Deploy Docs
      uses: JamesIves/github-pages-deploy-action@4.1.7
      if: ${{ runner.os == 'Linux' && github.ref == 'refs/heads/master' }}
      with:
        token: ${{ secrets.DEPLOY_TOKEN }}
        repository-name: tedvalson/NovelTea-site
        branch: gh-pages
        folder: ./doc/github.io/docs
        target-folder: docs
        single-commit: true
        commit-message: "AutoDocs: ${{ github.event.head_commit.message }}"

  build-android:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Setup JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
    - name: Setup Android NDK
      uses: nttld/setup-ndk@v1.0.6
      id: setup-ndk
      with:
        ndk-version: r20b

    - name: Checkout SFML
      uses: actions/checkout@v2
      with:
        repository: tedvalson/SFML
        path: SFML
        ref: 'noveltea'

    - name: Compile SFML and NovelTea
      run: sh .github/build_android.sh ${{ steps.setup-ndk.outputs.ndk-path }}

    - name: Build APK
      run: |
        cd android
        echo "ndk.dir=${{ steps.setup-ndk.outputs.ndk-path }}" > local.properties
        ./gradlew build

    - name: Test APK
      uses: reactivecircus/android-emulator-runner@v2
      with:
        api-level: 16
        script: |
          cd android && ./gradlew installDebug
          adb shell am start -n com.noveltea.launcher/android.app.NativeActivity
          sleep 5
          adb shell logcat -d

    - name: Upload Artifact
      uses: actions/upload-artifact@v2
      with:
        name: test-artifact-android
        path: android/app/build/outputs/apk/release/

  release:
    runs-on: ubuntu-latest
    needs: [build, build-android]
    if: startsWith('r', github.ref)
    steps:
    - name: Download Linux artifacts
      uses: actions/download-artifact@v1
      with:
        name: test-artifact-Linux
    - name: Download macOS artifacts
      uses: actions/download-artifact@v1
      with:
        name: test-artifact-macOS
    - name: Download Windows artifacts
      uses: actions/download-artifact@v1
      with:
        name: test-artifact-Windows
    - name: Download Android artifacts
      uses: actions/download-artifact@v1
      with:
        name: test-artifact-android
