name: NovelTea CI

on: [push, pull_request]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    steps:
    
    - name: Checkout
      uses: actions/checkout@v2
      
    - name: Cache Qt and SFML
      id: cache
      uses: actions/cache@v2
      with:
        path: |
          ${{ github.workspace }}/Qt
          SFML/install
        key: ${{ runner.os }}-NovelTea
          
    - name: Setup Linux Environment
      if: ${{ runner.os == 'Linux' }}
      run: |
        sudo apt install libxrandr-dev libudev-dev libopenal-dev libflac-dev libvorbis-dev libgl1-mesa-dev
        sudo apt install doxygen libgtest-dev
        
    - name: Install Qt
      uses: jurplel/install-qt-action@v2
      with:
        dir: ${{ github.workspace }}
        cached: ${{ steps.cache.outputs.cache-hit }}

    - name: Checkout SFML
      if: ${{ !steps.cache.outputs.cache-hit }}
      uses: actions/checkout@v2
      with:
        repository: SFML/SFML
        path: SFML
        ref: '9b596cc8d9240b240c391abb8c784fddbec4e0df'

    - name: Compile SFML
      if: ${{ !steps.cache.outputs.cache-hit }}
      shell: bash
      run: |
        cd SFML
        mkdir install
        mkdir build
        cd build
        cmake -DCMAKE_INSTALL_PREFIX=../install -DCMAKE_INSTALL_FRAMEWORK_PREFIX=../install -DSFML_BUILD_FRAMEWORKS=FALSE -DBUILD_SHARED_LIBS=TRUE ..
        cmake --build . --config Release --target install
        cd ../..
        
    - name: Compile NovelTea
      shell: bash
      run: |
        mkdir -p install/NovelTea
        mkdir -p doc/github.io/docs
        cmake -DBUILD_TEST=OFF -DCMAKE_INSTALL_PREFIX=./install/NovelTea -DSFML_DIR=./SFML/install/lib/cmake/SFML .
        cmake --build . --config Release --target install

    - name: Upload Artifact
      uses: actions/upload-artifact@v2
      with:
        name: test-artifact-${{ runner.os }}
        path: |
          bin/
          res/assets/

  build-android:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Setup JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
    - name: Setup Android NDK
      uses: nttld/setup-ndk@v1
      id: setup-ndk
      with:
        ndk-version: r16b

    - name: Checkout SFML
      uses: actions/checkout@v2
      with:
        repository: SFML/SFML
        path: SFML
        ref: '9b596cc8d9240b240c391abb8c784fddbec4e0df'

    - name: Compile SFML
      run: |
        cd SFML
        mkdir install
        mkdir build
        cd build
        cmake -DCMAKE_INSTALL_PREFIX=../install -DCMAKE_INSTALL_FRAMEWORK_PREFIX=../install -DCMAKE_SYSTEM_NAME=Android -DCMAKE_ANDROID_NDK=${{ steps.setup-ndk.outputs.ndk-path }} -DCMAKE_ANDROID_ARCH_ABI=armeabi-v7a -DCMAKE_ANDROID_NDK_TOOLCHAIN_VERSION=clang -DCMAKE_ANDROID_STL_TYPE=c++_shared -DCMAKE_ANDROID_API=16 ..
        cmake --build . --config Release --target install
        cd ../..
        
    - name: Compile NovelTea
      run: |
        mkdir -p install/NovelTea
        cmake -DBUILD_EDITOR=OFF -DBUILD_TEST=OFF -DCMAKE_SYSTEM_NAME=Android -DCMAKE_ANDROID_NDK=${{ steps.setup-ndk.outputs.ndk-path }} -DCMAKE_ANDROID_ARCH_ABI=armeabi-v7a -DCMAKE_ANDROID_NDK_TOOLCHAIN_VERSION=clang -DCMAKE_ANDROID_STL_TYPE=c++_shared -DCMAKE_ANDROID_API=16 .
        cmake --build . --config Release --target install

    - name: Build APK
      run: |
        cd android
        echo "ndk.dir=${{ steps.setup-ndk.outputs.ndk-path }}" > local.properties
        ./gradlew build

    - name: Upload Artifact
      uses: actions/upload-artifact@v1
      with:
        name: test-artifact-android
        path: android/app/build/outputs/apk/release/app-release-unsigned.apk

  release:
    runs-on: ubuntu-latest
    needs: [build, build-android]
    if: startsWith('r', github.ref)
    steps:
    - name: Download Linux artifacts
      uses: actions/download-artifact@v1
      with:
        name: test-artifact-Linux
    - name: Download macOS artifacts
      uses: actions/download-artifact@v1
      with:
        name: test-artifact-macOS
    - name: Download Windows artifacts
      uses: actions/download-artifact@v1
      with:
        name: test-artifact-Windows
    - name: Download Android artifacts
      uses: actions/download-artifact@v1
      with:
        name: test-artifact-android
